For my graph I included three classes: Node, Edge, and Graph
 
 Node.java:
 	My node class represents a single node in a graph. It stores a string of data.
 	My node class has methods such as isEmpty(), getData(), equals(), compareTo().
 	These are all pretty standard methods for an object to have. I chose to make
 	my node a separate class because I felt it would be easier to change the Nodes
 	and keep track of within edges.
 	
Edge.java:
	My edge class represents an edge in a graph which consists of a parent node and
	a child node. My edge class has similar methods as Node.java, but also includes
	methods to get the parent and child nodes, as this is needed in my graph class.
	
Graph.java:
	My graph class is made up of Edge and Node objects. The graph itself contains a
	map which maps the node (keys) to edges (values). I felt this was a good way to 
	keep track of all my nodes and edges as well as to keep track of every possible
	direction a node can go, by mapping it to the edges. I felt this will help me
	with determining paths later on. I included functionality to add and remove
	nodes/edges as needed to make my graph easier to change and update.