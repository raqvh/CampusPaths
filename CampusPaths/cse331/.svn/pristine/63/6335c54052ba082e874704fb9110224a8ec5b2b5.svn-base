package hw8;

/**
 * 
 * @author Raquel
 *
 */
public class Coordinate implements Comparable<Coordinate> {
	/*
	 * 
	 */
	
	private final double x;
	private final double y;
	
	/**
	 * 
	 */
	public Coordinate() {
		this(0.0,0.0);
	}
	
	/**
	 * 
	 * @param x
	 * @param y
	 */
	public Coordinate(double x, double y) {
		this.x = x;
		this.y = y;
	}
	
	/**
	 * 
	 * @return
	 */
	public double getX() {
		return new Double(x);
	}

	/**
	 * 
	 * @return
	 */
	public double getY() {
		return new Double(y);
	}
	
	/**
	 * 
	 */
	@Override
	public String toString() {
		return String.format("%.0f", x) + ", " + 
				String.format("%.0f",y);
	}
	
	/**
	 * 
	 */
	@Override
	public boolean equals(Object o) {
		if(o == this) 
			return true;
		if(!(o instanceof Coordinate)) 
			return false;
		Coordinate other = (Coordinate)o;
		return (this.x == other.x && this.y == other.y);
	}
	
	/**
	 * 
	 */
	@Override
	public int hashCode() {
		int result = 1;
		result = (int) (result * 31 * this.x);
		result = (int) (result * 31 * this.y);
		return result;
	}

	/**
	 * 
	 * @param other
	 * @return
	 */
	public double distance(Coordinate other) {
		double dx = this.x - other.x;
		double dy = this.y - other.y;
		return Math.sqrt((dx * dx) + (dy * dy));
	}

	/**
	 * 
	 */
	public int compareTo(Coordinate other) {
		Coordinate origin = new Coordinate();
		double d = distance(origin) - other.distance(origin);
		if(d > 0.0) {
			return 1;
		} else if(d < 0.0) {
			return -1;
		} else {
			return 0;
		}
	}
	
	//checkRep()
}
